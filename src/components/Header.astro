---
import { Icon } from 'astro-icon/components';

const currentPath = Astro.url.pathname;

const navItems = [
  { href: '/', label: 'Home' },
  { href: '/professional', label: 'Professional' },
  { href: '/personal', label: 'Personal' },
  { href: '/writing', label: 'Writing' },
  { href: '/about', label: 'About' },
  { href: '/contact', label: 'Contact' }
];
---

<header class="sticky top-0 z-50 bg-black/80 backdrop-blur-md border-b border-gray-800">
  <nav class="max-w-6xl mx-auto px-4 py-4">
    <div class="flex items-center justify-between">
      <!-- Logo/Brand -->
      <a href="/" class="text-xl font-bold font-heading hover:text-neon-purple transition-colors duration-200">
        ND
      </a>

      <!-- Desktop Navigation -->
      <div class="hidden md:flex items-center space-x-8">
        {navItems.map((item) => (
          <a 
            href={item.href}
            class={`text-sm font-medium transition-colors duration-200 relative group ${
              currentPath === item.href 
                ? 'text-neon-purple' 
                : 'text-gray-300 hover:text-white'
            }`}
          >
            {item.label}
            <span class="absolute -bottom-1 left-0 w-0 h-0.5 bg-gradient-to-r from-neon-purple to-neon-pink transition-all duration-200 group-hover:w-full"></span>
          </a>
        ))}
      </div>

      <!-- Mobile Menu Button -->
      <button 
        id="mobile-menu-button"
        class="md:hidden p-2 rounded-lg hover:bg-medium-gray transition-colors duration-200"
        aria-label="Toggle mobile menu"
      >
        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
        </svg>
      </button>
    </div>

    <!-- Mobile Navigation -->
    <div id="mobile-menu" class="md:hidden mt-4 pb-4 border-t border-gray-800 hidden">
      <div class="space-y-2 pt-4">
        {navItems.map((item) => (
          <a 
            href={item.href}
            class={`block px-3 py-2 rounded-lg text-sm font-medium transition-colors duration-200 ${
              currentPath === item.href 
                ? 'text-neon-purple bg-medium-gray' 
                : 'text-gray-300 hover:text-white hover:bg-medium-gray'
            }`}
          >
            {item.label}
          </a>
        ))}
      </div>
    </div>
  </nav>
</header>

<script>
  // Mobile menu toggle
  const mobileMenuButton = document.getElementById('mobile-menu-button');
  const mobileMenu = document.getElementById('mobile-menu');

  if (mobileMenuButton && mobileMenu) {
    mobileMenuButton.addEventListener('click', () => {
      mobileMenu.classList.toggle('hidden');
    });

    // Close mobile menu when clicking outside
    document.addEventListener('click', (e) => {
      if (!mobileMenuButton.contains(e.target) && !mobileMenu.contains(e.target)) {
        mobileMenu.classList.add('hidden');
      }
    });
  }
</script>
