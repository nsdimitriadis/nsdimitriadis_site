---
export interface Props {
  title: string;
  subtitle?: string;
  description: string;
  cta?: {
    text: string;
    href: string;
    variant?: 'primary' | 'secondary';
  };
  secondaryCta?: {
    text: string;
    href: string;
  };
  gradient?: boolean;
}

const { 
  title, 
  subtitle, 
  description, 
  cta, 
  secondaryCta, 
  gradient = false 
} = Astro.props;
---

<section class="relative min-h-[80vh] flex items-center justify-center px-4">
  {gradient && (
    <div class="absolute inset-0 bg-gradient-to-br from-neon-purple/10 via-transparent to-neon-pink/10"></div>
  )}
  
  <div class="relative z-10 text-center max-w-4xl mx-auto">
    {subtitle && (
      <p class="text-neon-purple text-sm uppercase tracking-wider mb-4 animate-fade-in">
        {subtitle}
      </p>
    )}
    
    <h1 class="text-4xl md:text-6xl lg:text-7xl font-bold font-heading mb-6 animate-slide-up">
      {gradient ? (
        <span class="bg-gradient-to-r from-neon-purple via-neon-pink to-neon-blue bg-clip-text text-transparent">
          {title}
        </span>
      ) : (
        title
      )}
    </h1>
    
    <p class="text-xl md:text-2xl text-gray-300 mb-12 max-w-3xl mx-auto animate-fade-in animation-delay-200">
      {description}
    </p>
    
    <div class="flex flex-col sm:flex-row gap-4 justify-center animate-fade-in animation-delay-400">
      {cta && (
        <a 
          href={cta.href}
          class={`inline-flex items-center gap-2 px-8 py-4 font-semibold rounded-lg transition-all duration-200 hover:scale-105 ${
            cta.variant === 'secondary' 
              ? 'bg-medium-gray text-white hover:bg-gray-600 border border-gray-600' 
              : 'bg-gradient-to-r from-neon-purple to-neon-pink text-white hover:shadow-lg hover:shadow-neon-purple/25'
          }`}
        >
          {cta.text}
          <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"></path>
          </svg>
        </a>
      )}
      
      {secondaryCta && (
        <a 
          href={secondaryCta.href}
          class="inline-flex items-center gap-2 px-8 py-4 font-semibold rounded-lg border border-gray-600 text-gray-300 hover:text-white hover:border-gray-500 transition-all duration-200"
        >
          {secondaryCta.text}
        </a>
      )}
    </div>
  </div>
  
  <!-- Scroll indicator -->
  <div class="absolute bottom-8 left-1/2 transform -translate-x-1/2 animate-bounce">
    <svg class="w-6 h-6 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 14l-7 7m0 0l-7-7m7 7V3"></path>
    </svg>
  </div>
</section>

<style>
  .animation-delay-200 {
    animation-delay: 0.2s;
    animation-fill-mode: both;
  }
  
  .animation-delay-400 {
    animation-delay: 0.4s;
    animation-fill-mode: both;
  }
</style>
