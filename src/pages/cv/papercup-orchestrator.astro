---
import BaseLayout from '@/layouts/BaseLayout.astro';
import { cvEntries } from '@/data/cvEntries';

const entry = cvEntries.find(e => e.slug === 'papercup-orchestrator');
---

<BaseLayout 
  title="Papercup's Orchestrator - Nikos Dimitriadis"
  description="Building the orchestration layer for AI-powered dubbing at scale"
  article={true}
>
  <article class="py-20 px-4">
    <div class="max-w-4xl mx-auto">
      <!-- Breadcrumb -->
      <nav class="mb-8">
        <a href={`${import.meta.env.BASE_URL}cv`} class="text-neon-purple hover:text-neon-pink transition-colors duration-200 flex items-center gap-2">
          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
          </svg>
          Back to CV
        </a>
      </nav>

      <!-- Hero Image -->
      {entry?.coverImage && (
        <div class="w-full h-full md:h-128 rounded-2xl mb-8 overflow-hidden border border-gray-800">
          <img src={`${import.meta.env.BASE_URL}${entry.coverImage.replace(/^\//, '')}`} alt="Papercup's Orchestrator" class="w-full h-full object-cover" />
        </div>
      )}

      <!-- Title Section -->
      <div class="mb-12">
        <div class="flex items-center gap-4 mb-4">
          {entry?.logoSrc && (
            <img 
              src={`${import.meta.env.BASE_URL}${entry.logoSrc.replace(/^\//, '')}`} 
              alt="Papercup logo" 
              class="h-10 w-auto object-contain"
            />
          )}
          <span class="text-sm text-neon-purple font-medium">Nov 2022 – June 2025 · London (Hybrid)</span>
        </div>
        <h1 class="text-4xl md:text-6xl font-bold font-heading mb-6">
          Papercup's Orchestrator
        </h1>
      </div>

      <!-- Content -->
      <div class="prose prose-invert max-w-none">
        <p class="text-xl text-gray-400 leading-relaxed mb-8">
          Why "Papercup's Orchestrator"? Because when AI voices needed to sing in harmony, I made sure the data kept perfect rhythm. I was the first and only data engineer hire—building the platform, tooling, and the guardrails that let ML, product, and ops move faster without stepping on each other's toes.
        </p>
        
        <h2>Overview</h2>
        <p>
          First and only data engineer hire; owned the data platform, governance, and cross-team enablement across product, ML, and operations. I designed and built the end-to-end data framework powering company-wide insights for market strategy, growth evaluation, and operational reporting. I accelerated ML development by delivering reliable pipelines and fit-for-purpose feature stores, improving iteration cadence and deployment confidence. I scaled an AI-driven dubbing platform by establishing robust data foundations, clear data contracts, and CI/CD for data workflows.
        </p>

        <h2>Key Achievements</h2>
        <ul>
          <li>Designed and operated the end-to-end data platform used for executive reporting, growth evaluation, and operational decision-making.</li>
          <li>Delivered stable, observable batch and streaming pipelines that unblocked ML experimentation and sped up feature rollout.</li>
          <li>Introduced clear data contracts and versioned models, reducing breaking changes across teams.</li>
          <li>Implemented CI/CD for data workflows to raise reliability and deployment confidence.</li>
        </ul>

        <h2>Technologies Used</h2>
        <p>
          Airflow, BigQuery, Airbyte, DBT, and a host of third‑party APIs powering ingestion, transformation, orchestration, and feature delivery.
        </p>
      </div>
    </div>
  </article>
</BaseLayout>
