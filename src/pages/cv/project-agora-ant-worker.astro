---
import BaseLayout from '@/layouts/BaseLayout.astro';
import { cvEntries } from '@/data/cvEntries';

const entry = cvEntries.find(e => e.slug === 'project-agora-ant-worker');
---

<BaseLayout 
  title="Project Agora's Ant Worker - Nikos Dimitriadis"
  description="Contributing to the future of decentralized networks"
  article={true}
>
  <article class="py-20 px-4">
    <div class="max-w-4xl mx-auto">
      <!-- Breadcrumb -->
      <nav class="mb-8">
        <a href={`${import.meta.env.BASE_URL}cv`} class="text-neon-purple hover:text-neon-pink transition-colors duration-200 flex items-center gap-2">
          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
          </svg>
          Back to CV
        </a>
      </nav>

      <!-- Hero Image -->
      {entry?.coverImage && (
        <div class="w-full h-64 md:h-96 rounded-2xl mb-8 overflow-hidden border border-gray-800">
          <img src={`${import.meta.env.BASE_URL}${entry.coverImage.replace(/^\//, '')}`} alt="Project Agora's Ant Worker" class="w-full h-full object-cover" />
        </div>
      )}

      <!-- Title Section -->
      <div class="mb-12">
        <div class="flex items-center gap-4 mb-4">
          {entry?.logoSrc && (
            <img 
              src={`${import.meta.env.BASE_URL}${entry.logoSrc.replace(/^\//, '')}`} 
              alt="Project Agora logo" 
              class="h-10 w-auto object-contain"
            />
          )}
          <span class="text-sm text-neon-purple font-medium">Mar 2021 – Nov 2021 · Remote</span>
        </div>
        <h1 class="text-4xl md:text-6xl font-bold font-heading mb-6">
          Project Agora's Ant Worker
        </h1>
      </div>

      <!-- Content -->
      <div class="prose prose-invert max-w-none">
        <p class="text-xl text-gray-400 leading-relaxed mb-8">
          Why "Ant Worker"? Because I quietly carried a lot of grains—real-time signals—so campaigns could build results fast. I turned streaming click-noise into timely, reliable insight that advertisers and publishers actually used.
        </p>
        
        <h2>Overview</h2>
        <p>
          Delivered real-time insights on digital campaign performance to optimize spend and targeting for advertisers and publishers. Built scalable serverless big data applications for timely performance and monitoring, ensuring that decision-critical metrics were fresh, accurate, and actionable.
        </p>

        <h2>Key Achievements</h2>
        <ul>
          <li>Delivered low-latency dashboards for pacing, CTR, and revenue, enabling proactive spend optimization.</li>
          <li>Implemented resilient streaming ingestion with idempotent processing to maintain accuracy under bursty loads.</li>
          <li>Added monitoring and alerting around pipelines and APIs, reducing time-to-detect and recover incidents.</li>
          <li>Automated campaign data workflows and SLAs with cloud-native orchestration.</li>
        </ul>

        <h2>Technologies Used</h2>
        <p>
          GCP (Pub/Sub, Airflow, Workflows, Cloud Run).
        </p>
      </div>
    </div>
  </article>
</BaseLayout>
